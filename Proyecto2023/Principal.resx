<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAfQAAAH0CAYAAADL1t+KAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAAADp0RVh0Q29tbWVudAB4cjpkOkRBRnNYSjU1VGg4OjksajoyNDQ3MjA4OTc1NDM5
        NzY3NDksdDoyMzA4MjMxMguUXhUAACpbSURBVHhe7d13vyRFoT7w33u69+o1kRSuCQNJkkgQFEUyEkWU
        qEgQ4cJVQJKBIArIkpSMRFnCSlhkkaReAcMr6B/PcPswO1unz5npmbO7Nd8/vh/Onqnq7ukzzNNVXVX9
        //71r381AMDmTaADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUE
        OgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKAD
        QAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBU
        QKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUE
        OgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKAD
        QAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBU
        QKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUE
        OgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKAD
        QAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBU
        QKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUE
        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
        uaC59MfXFl8btrECPcvNLtWVvlx50Ezpbwg1E+gwhjfeeHMQPKNdveNou+bT7V56fVbeeuutwfE/+NDj
        xddbKROl12Yl5zTnJBc6pdeXK+/NSHfmlUAHgAoIdACogEAHgAoIdACogEAHgAoIdACogEAHgAoIdACo
        gEAHgAoIdACogEAHgAoIdACogEAHgAoIdACogEAHgAoIdACogEAHgAoIdACogEAHgAoIdACogEAHgAoI
        dACogECnlxf++FLz+Oo1zSOPPNE88LvHmnvufbj57Z0PNLfedm9z86q7mhtv+k3zy1/dPnDHHfcNyv3l
        L/9b3NYk/vnPfw72e9EPf9accOI5zdcOObn58ldObA457JTmpG//oPnxZdcNjq9UdykPPvR48/Orfz1w
        3fW3Dv6d/ZXKjuu11//cPPTw6rfP0z2Dc3TjTb8dnLN3zs9fi3Xitdf+3KzO+X70yebBB3/f3HvfI82d
        dz3Y3P72uV11y93NTb/+bXPDjXcMzne2edfdDw7e/1tv/b24vcXkfeY9571ffc3Ng22tXbuuWHYxb775
        1mDfObYc169uuKO55da7m/sfeKx56aVXinWi/Uw9/Pb5Sdm773moueM39w/O1c2r7lzvM5VzttT2upQ+
        v3fe+bvmttvbz+87x519Zd853394Zm1xW3089dSzzRVX/rI5+ZQL3v7snjr4DB908Leb4084u/nvi37S
        3PP2ORj3b8j8Eej0st3H9m3+7T07jOU//nOnZtc9DmsuvOing4AqbXcpCYuE+HYfXd7+P/3ZAwfhNE4g
        f/Vr39pgOzvu8rXmmWdfKJYfx6mnX7jBtltnnnVxsU4cdfR3inWW8r4Pfq7Ze9+jm5/+7Mbmf//3b8Vt
        D1v30ssbbOPf37tj841vntv84x//KNYZ9eub79xgG639v3RCsU5M8pmKbT+6z+CiLgFf2m7JpPvaapvP
        Dy4ac0HR5yIvFww773pIcR+jtv7IXs055/64+etfl/77MZ8EOr185L/2Ln75LNcHttit+clPbyhuezHp
        AfjE9gcUt7eUz+12aPP7x58ubndUKdBjj72OLJYfx6SBfuTXzyjWGUcugtICLW2/VQr01iWXXlusM2rS
        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
        GH0+Lffc89BCKz33xvOQlsUWrslo+wO/+s2F40rvQVs3P7/yyuvFen0IdJgegQ49DQf6OLba5vOD56GX
        FnWZpsuvvH691d62/eg+zYEHndSc9O0fNKd/56Lm6GPPbD6741fXO7Zvn3L+oKs967+3i958+rMHDu75
        l/YxKYEO0yPQoaflBHoCdZtt92p22PmgwQC1a69b1bz2+p+L25uFtL6zMEs757wkx7jPfsc29973yHp1
        H3nkiYWlaXMRMPxaXwIdpkegwxzJPf5MSbvyql813zvr4sH98oRqbhW8/MprxTrx/NoXB2GegXal14GN
        T6ADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUE
        OgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKAD
        QAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBU
        QKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUE
        OgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKAD
        QAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBU
        QKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUE
        OgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKAD
        QAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBU
        QKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUE
        OgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKADQAUEOgBUQKAD
        wGbvX83/B6mpaKK00pd3AAAAAElFTkSuQmCC
</value>
  </data>
</root>