<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAOw2AADsNgHVoobGAAAD1ElE
        QVRYR8WXXYiUZRTHx1xrMy+MINdvSEFnye2DQjFQ6iaM/AAvBL3K6Z2RXTSMIisKIbRuFdahCyFCUS+M
        AvXCTywCYccSNC+0pTQRNT/CoFLM7ffbzuvOuDPDarPbgR/z7nnOnP95n+c5zzObyefzPTVYB45nBtUQ
        OHMXF8AC9kEzROQgGQKTypgAL8JlOA3jICKHwBSDx+AYXIfn9A2ZKQZNsBNchiX6htQUhI1RwOr/q4A3
        ooBikiSZQqEQo0NgUcArcAsOw1Qo36iNZHTI9hlOaYWLcAN+GQTOgi1/IGT7DKc8DifAZbgEfqFaovvB
        XL6cuX8L2T7DKQ/CrghaCZ4H1abwfhgPK+A2lEK2z9xwDEgRGt4JkfudyP15uCstgtZEUNGi7Ib/apFX
        0pd7P4YqLYIWgdO0HxpyJ5gDXN7dYJctjaFKi8Cn4CqcgobcCeaAMXASvG+ej6FKi0A74QcY8J3QeTQr
        wzpL2VEwMfBZX5r3abgGx6ElvlppEZhOlWtV904weYi0wXr4Gs4EPut7ctn8t807C3yxLfBQpKi0e+kE
        EksTJKBgD9yE84HP+n6C5MNPX25OXi+4DC11N7aCcKcT4u8Y/ddImOnsmu6n4r/Dn7AFXoUnAp+3gmPG
        LN/w7YxM8di0yFLDQjDthPI7YTJ4mDRt+KZNcaf9Z/gL3oJmiCx3ZkifYzfAmZgBEVHDEBA7wd1afiec
        gyMw/oPiPJO7vk6xb/5wtcT6YmwbGPtRr6+rThEIiL+OvgeXwfPbc7y3gCS3Ytzm7skjSeQmuwXzTVrL
        egVL2YURexjsjhitYohI+a+jDhgLE/1szewaRsvZZm48N9uUegkdixhj/Y7fjdEahpCkv47egxZoRAHu
        mQn66hpCsgos4Aqk1/LxfFJY/MmXsx8lidM50CVYFLEHweWL0RqGkCwFz22LcEOKz9fp5wKzcC+bcDsY
        u0bfplJrRFQxBMQ94Iml4FZoC7brS5JC18dfvDCXIrpJaIvVakPFFfUssIB3OT8e4DOiqhgC4iXkPyhO
        v2d46vfZmTjLLEza9N30HMnSg8hWWwDpQeSzb/4HKC7XIE8Rw0Ouv4WQBfwIFvBM+ORZ8KY8zSyM/apn
        xHASvgZuLgXuPopvw9+QFiBXoCPk+lsIuQROvUuwAzyYfPu0NT+DpjfXLnGavYw84Txk0svIgg6B0y9X
        obyISyFX3Ugus6EbFPw18NmlmQkRzXr3v45ttUc26y9lnaU8lBdxIb5a3bwV29vbLeIl2AseybIH5uRy
        uQH/VENMvDU74DJc7CxlO/4BDk/65dxVJY0AAAAASUVORK5CYII=
</value>
  </data>
</root>